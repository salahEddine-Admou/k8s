# ==============================================
# KUBERNETES LEARNING: FRONTEND DEPLOYMENT
# File: 09-frontend-deployment.yaml
# ==============================================

apiVersion: apps/v1
kind: Deployment

metadata:
  name: frontend-deployment
  namespace: travelmemory
  labels:
    app: travelmemory
    component: frontend

spec:
  replicas: 2
  
  selector:
    matchLabels:
      app: travelmemory
      component: frontend
  
  template:
    metadata:
      labels:
        app: travelmemory
        component: frontend
    
    spec:
      containers:
      - name: frontend
        image: travelmemory-frontend:latest
        imagePullPolicy: IfNotPresent
        
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        
        env:
        - name: REACT_APP_API_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REACT_APP_API_URL
        
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

# ==============================================
# FRONTEND SPECIFIC NOTES:
# ==============================================
# - React app runs on port 3000
# - Connects to backend via REACT_APP_API_URL
# - Uses less CPU than backend (mostly static assets)
# - Served by nginx or similar in production

# ==============================================
# KEY LEARNING POINTS:
# ==============================================
# 1. Frontend connects to backend-service
# 2. Environment variables configured at build/runtime
# 3. Replicas for high availability
# 4. Health checks on root path

